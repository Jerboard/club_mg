from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

import db
from config import conf
from enums import BaseCB, UserCB


# –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
def com_start_kb(keyboard_type: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data=f'{UserCB.PAY_YOOKASSA_1.value}:0')

    if keyboard_type == 0:
        kb.button(text='–û –∫–ª—É–±–µ', url=conf.info_url)
    elif keyboard_type == 1:
        kb.button (text='–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data=UserCB.MY_ACCOUNT.value)
    else:
        kb.button (text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url=conf.channel_link)

    kb.button (text='–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data=UserCB.SUPPORT_0.value)
    if keyboard_type != 0:
        kb.button (text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=BaseCB.BACK_COM_START.value)

    return kb.adjust(1).as_markup()


# –ü–æ –∫–Ω–æ–ø–∫–µ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
def get_support_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='–î–æ—Å—Ç—É–ø –ø–æ EMAIL', callback_data=UserCB.SUPPORT_1.value)
    kb.button (text='–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É', url='https://t.me/Magirani_support')
    kb.button (text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=BaseCB.BACK_COM_START.value)
    return kb.adjust(1).as_markup()


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
def accept_email() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=UserCB.PAY_YOOKASSA_0.value)
    kb.button (text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'{UserCB.PAY_YOOKASSA_1.value}:1')
    kb.button (text='üîô –ù–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω', callback_data=BaseCB.BACK_COM_START.value)
    return kb.adjust (1).as_markup ()


# –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞
def select_tariff_kb(info: db.InfoRow) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text=f'1 –ú–µ—Å—è—Ü: {info.cost_1} ‚ÇΩ', callback_data=f'{UserCB.PAY_YOOKASSA_2.value}:1:{info.cost_1}')
    kb.button (text=f'‚ú®Ô∏è 3 –º–µ—Å—è—Ü–∞ {info.cost_3} ‚ÇΩ ‚ú®Ô∏è', callback_data=f'{UserCB.PAY_YOOKASSA_2.value}:3:{info.cost_3}')
    kb.button (text=f'6 –º–µ—Å—è—Ü–µ–≤ {info.cost_6} ‚ÇΩ', callback_data=f'{UserCB.PAY_YOOKASSA_2.value}:6:{info.cost_6}')
    kb.button (text=f'üîÆ 1 –≥–æ–¥ {info.cost_12} ‚ÇΩ üîÆ', callback_data=f'{UserCB.PAY_YOOKASSA_2.value}:12:{info.cost_12}')
    kb.button (text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=BaseCB.BACK_COM_START.value)
    return kb.adjust (1).as_markup ()


# –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏
def get_unsubscribe_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=BaseCB.BACK_COM_START.value)
    kb.button (text='üîó –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url=conf.channel_link)
    kb.button (text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏', callback_data=UserCB.UNSUBSCRIBE.value)
    return kb.adjust (1).as_markup ()


# —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –≤ —é–∫–∞—Å—Å–µ
def pay_yookassa_kb(amount: int, link: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text=f'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å {amount} ‚ÇΩ', url=link)
    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=UserCB.PAY_YOOKASSA_0.value)
    return kb.adjust (1).as_markup ()


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–æ —Å—Å—ã–ª–∫–æ–π
def succeeded_link_kb(link: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='üîó –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url=link)
    kb.button (text='üîô –ù–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω', callback_data=BaseCB.BACK_COM_START.value)
    return kb.adjust (1).as_markup ()


# —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def del_message_user():
    kb = InlineKeyboardBuilder ()
    kb.button (text='‚úÖ –û–∫', callback_data=BaseCB.BACK_COM_START.value)
    return kb.adjust (1).as_markup ()


# –î–ª—è –∑–∞–±–∞–Ω–µ–Ω—ã—Ö
def get_ban_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É', url='https://t.me/Magirani_support')
    return kb.adjust(1).as_markup()
